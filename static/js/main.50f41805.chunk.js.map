{"version":3,"sources":["data.js","Select.jsx","Add.jsx","ConfigurationModal.jsx","Configure.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["epts","Select","state","selection","reduce","result","ept","id","all","this","setState","allSelected","Object","keys","forEach","key","every","filter","Table","celled","Header","Row","HeaderCell","textAlign","collapsing","Checkbox","onChange","toggleAll","checked","Body","type","map","index","Cell","toggle","label","className","Button","icon","onClick","delete","React","Component","Add","history","useHistory","useState","setSelection","seedEpts","isSelected","hasOwnProperty","assign","selectEpt","Form","Field","Input","placeholder","name","value","e","v","changeAmount","disabled","required","basic","push","pathname","redirectToConfig","ConfigurationModal","callback","parameters","setParams","isOpen","setVisibility","Modal","trigger","href","Icon","size","dimmer","onClose","open","content","Content","parameter","Actions","generateAPs","availableTypes","matches","input_types","candidate","text","sort","Configure","listedEpts","i","l","multiplyEpts","useLocation","a","output_type","gatherTypes","options","App","labelPosition","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.50f41805.chunk.js","sourcesContent":["export var epts = [\n\t{\n\t\t'id': 1,\n\t\t'type': 'primitive',\n\t\t'label': 'Subinterface',\n\t\t'tags': [],\n\t\t'node': '',\n\t\t'parameters': {\n\t\t\t'security_zone': '',\n\t\t\t'vlan_id': ''\n\t\t},\n\t\t'input_types': ['interface'],\n\t\t'output_type': 'interface',\n\t\t'basic': true,\n\t},\n\t{\n\t\t'id': 2,\n\t\t'type': 'primitive',\n\t\t'label': 'Attach VLAN',\n\t\t'tags': [],\n\t\t'node': '',\n\t\t'parameters': {\n\t\t\t'vlan_id': ''\n\t\t},\n\t\t'input_types': ['interface'],\n\t\t'output_type': 'interface',\n\t},\n\t{\n\t\t'id': 3,\n\t\t'type': 'primitive',\n\t\t'label': 'Address type',\n\t\t'tags': [],\n\t\t'node': '',\n\t\t'parameters': {\n\t\t\t'IPv4': '',\n\t\t\t'IPv6': ''\n\t\t},\n\t\t'input_types': ['interface', 'subinterface'],\n\t\t'output_type': 'routable interface',\n\t},\n\t{\n\t\t'id': 4,\n\t\t'type': 'primitive',\n\t\t'label': 'BGP unnumbered',\n\t\t'tags': [],\n\t\t'node': '',\n\t\t'parameters': {\n\t\t\t'timeout': ''\n\t\t},\n\t\t'input_types': ['interface', 'subinterface'],\n\t\t'output_type': 'interface',\n\t},\n\t{\n\t\t'id': 5,\n\t\t'type': 'primitive',\n\t\t'label': 'Routing policy',\n\t\t'tags': [],\n\t\t'node': '',\n\t\t'parameters': {\n\t\t\t'import/export': ''\n\t\t},\n\t\t'input_types': ['routable interface'],\n\t\t'output_type': 'routing session',\n\t},\n\t{\n\t\t'id': 6,\n\t\t'type': 'custom',\n\t\t'label': 'Std2SI-BGP',\n\t\t'tags': [],\n\t\t'node': '',\n\t\t'parameters': {\n\t\t\t'some parameter': ''\n\t\t},\n\t\t'input_types': ['any'],\n\t\t'output_type': 'any',\n\t},\n]","import React from 'react';\nimport { Table, Button, Checkbox } from 'semantic-ui-react';\nimport { epts } from './data';\n\nexport class Select extends React.Component {\n  state = {\n    selection: epts.reduce((result, ept) => {\n      result[ept.id] = false;\n      return result;\n    }, {}),\n    all: false,\n    epts\n  };\n\n  toggle(id) {\n    let { selection } = this.state;\n    selection[id] = !selection[id];\n    this.setState(() => ({ selection, all: this.allSelected() }));\n  };\n\n  toggleAll() {\n    let { all, selection } = this.state;\n    all = !all;\n    Object.keys(selection).forEach(key => selection[key] = all);\n    this.setState(() => ({ selection, all }));\n  }\n\n  allSelected() {\n    let { selection } = this.state;\n    return Object.keys(selection).every(id => selection[id]);\n  }\n\n  delete(id) {\n    let { epts } = this.state;\n    epts = epts.filter(ept => ept.id !== id);\n    this.setState(() => ({ epts }));\n  }\n\n  render() {\n    let { selection, all, epts } = this.state;\n\n    return (\n      <div>\n        <h1>Select EPTs</h1>\n\n        <Table celled>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell textAlign=\"center\" collapsing>\n                <Checkbox onChange={ () => this.toggleAll() } checked={ all } />\n              </Table.HeaderCell>\n              <Table.HeaderCell>Name</Table.HeaderCell>\n              <Table.HeaderCell>Type</Table.HeaderCell>\n              <Table.HeaderCell collapsing>Actions</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {\n              epts\n                .filter(ept => ept.type !== 'primitive')\n                .map((ept, index) => \n                  <Table.Row key={ index }>\n                    <Table.Cell textAlign=\"center\">\n                      <Checkbox onChange={ () => this.toggle(ept.id) } checked={ all || selection[ept.id] } />\n                    </Table.Cell>\n                    <Table.Cell>{ ept.label }</Table.Cell>\n                    <Table.Cell>{ ept.type }</Table.Cell>\n                    <Table.Cell textAlign=\"center\" className=\"no-wrap\">\n                      <Button icon=\"edit\" />\n                      <Button icon=\"copy\" />\n                      <Button icon=\"trash\" onClick={ () => this.delete(ept.id) } />\n                    </Table.Cell>\n                  </Table.Row>\n                )\n            }\n          </Table.Body>\n        </Table>\n      </div>\n    );\n  }\n}","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Form, Button, Checkbox, Table, Input } from 'semantic-ui-react';\nimport { epts } from './data';\n\nfunction redirectToConfig(history, selection) {\n  history.push({\n    pathname: '/configure', \n    selection\n  });\n}\n\nexport function Add() {\n  let history = useHistory();\n  const [selection, setSelection] = useState({});\n\n  const selectEpt = ept => {\n    setSelection(selection => {\n      let isSelected = selection.hasOwnProperty(ept.id);\n      let result = Object.assign({}, selection, {[ept.id]: 1});\n      if (isSelected) delete result[ept.id];\n      return result;\n    });\n  }\n\n  const changeAmount = (ept, value) => {\n    let isSelected = selection.hasOwnProperty(ept.id);\n    if (isSelected) {\n      let v = 1 * value;\n      setSelection(Object.assign({}, selection, {[ept.id]: v > 0 ? v : 1}));\n    }\n  }\n\n  const seedEpts = (type) => {\n    return epts\n      .filter(ept => ept.type === type)\n      .map((ept, index) =>\n        <Table.Row key={ index }>\n          <Table.Cell textAlign=\"center\" collapsing>\n            <Checkbox onChange={ () => selectEpt(ept) } checked={ selection.hasOwnProperty(ept.id) } />\n          </Table.Cell>\n          <Table.Cell>{ ept.label }</Table.Cell>\n          <Table.Cell collapsing>\n            <Form.Field>\n              <Input\n                placeholder='#'\n                name={ ept.id }\n                type=\"number\"\n                value={ selection[ept.id] || 0 }\n                onChange={ (e, {value}) => changeAmount(ept, value) }\n                disabled={ !selection[ept.id] }\n              />\n            </Form.Field>\n          </Table.Cell>\n        </Table.Row>\n      );\n  }\n\n\treturn (\n\t\t<div>\n\t\t\t<h1>Add EPT</h1>\n\t\t\t<Form>\n        <Form.Field>\n          <label>Name</label>\n          <input placeholder='Name' required />\n        </Form.Field>\n        <Form.Field>\n          <label>Tags</label>\n          <input placeholder='Tags' />\n        </Form.Field>\n        <h2>Select Primitives To Include:</h2>\n        <Table basic=\"very\" className=\"primitives\">\n          <Table.Body>{ seedEpts('primitive') }\n          </Table.Body>\n        </Table>\n        <h2>Select EPTs To Include:</h2>\n        <Table basic=\"very\" className=\"epts\">\n          <Table.Body>{ seedEpts('custom') }\n          </Table.Body>\n        </Table>\n        <Form.Field>\n        </Form.Field>\n        <div className=\"buttons\">\n          <Button onClick={ () => history.push('/') }>Cancel</Button>\n          <Button onClick={ () => redirectToConfig(history, selection) }>Next</Button>\n        </div>\n      </Form>\n\t\t</div>\n\t);\n}","import React, { useState } from 'react';\nimport { Button, Header, Icon, Modal, Form } from 'semantic-ui-react';\n\nexport function ConfigurationModal({epts={}, name='', callback=() => {}}) {\n  const [parameters, setParams] = useState(Object.assign({}, (epts[name] || {}).parameters));\n  const [isOpen, setVisibility] = useState(false);\n  return (\n    <Modal\n      trigger={<a href=\"#x\" onClick={ () => setVisibility(true) }>Configure <Icon name='chevron right' /></a>}\n      size='tiny'\n      dimmer='inverted'\n      onClose={ () => {\n        setVisibility(false);\n        callback(parameters);\n      } }\n      open={ isOpen }\n    >\n      <Header icon='browser' content={ `Configuration of ${name}` } />\n      <Modal.Content>\n        <Form>\n        {\n          Object.keys(parameters).map((parameter, index) => \n            <Form.Input\n              key={ index }\n              label={ parameter }\n              name={ parameter }\n              placeholder={ parameter }\n              value={ parameters[parameter] }\n              onChange={ (e, { value }) => setParams(Object.assign({}, parameters, {[parameter]: value})) }\n            />\n          )\n        }\n        </Form>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button onClick={ () => setVisibility(false) }>Done</Button>\n      </Modal.Actions>\n    </Modal>\n  )\n}","import React from 'react';\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport { Button, Table, Select } from 'semantic-ui-react';\nimport { epts } from './data';\n\nimport { ConfigurationModal } from './ConfigurationModal';\n\nfunction multiplyEpts(selection) {\n  return Object.keys(selection).reduce((result, id) => {\n    for (let i = 0, l = selection[id]; i < l; i++) {\n      result[`${epts[id].label} ${i+1}`] = Object.assign({}, epts[id]);\n    }\n    return result;\n  }, {});\n}\n\nfunction gatherTypes(listedEpts) {\n  return Object.keys(listedEpts).reduce((result, name) => {\n    let ept = listedEpts[name];\n    let a = result[ept.output_type] || [];\n    a.push(name);\n    result[ept.output_type] = a;\n    return result;\n  }, {});\n}\n\nfunction generateAPs(name, ept, availableTypes) {\n  let matches = ept.input_types.reduce((result, type) => {\n    (availableTypes[type] || []).forEach(candidate => {\n      if (candidate !== name) result[candidate] = candidate;\n    });\n    return result;\n  }, {});\n  return [\n    { key: '999', text: 'Application Point', value: 'Application Point'},\n    ...Object.keys(matches).sort().map((label, index) => ({key: index, text: label, value: label}))\n  ];\n}\n\nexport function Configure() {\n  const history = useHistory();\n  const location = useLocation();\n\n  // let selection = {1: 3, 2: 3, 3: 1} || location['selection'];\n  let selection = location['selection'] || {};\n  let listedEpts = multiplyEpts(selection);\n  let availableTypes = gatherTypes(listedEpts);\n\n  return (\n    <div>\n      <h1>Configuration</h1>\n\n      <Table celled collapsing>\n        <Table.Body>\n          {\n            Object.keys(listedEpts)\n              .map((name, index) => \n                <Table.Row key={ index }>\n                  <Table.Cell>{ name }</Table.Cell>\n                  <Table.Cell>\n                    <Select options={ generateAPs(name, listedEpts[name], availableTypes) } />\n                  </Table.Cell>\n                  <Table.Cell>\n                    <ConfigurationModal\n                      name={ name }\n                      epts={ listedEpts }\n                      callback={ parameters => listedEpts[name].parameters = parameters }\n                    />\n                  </Table.Cell>\n                </Table.Row>\n              )\n          }\n        </Table.Body>\n      </Table>\n      <div className=\"buttons\">\n        <Button onClick={ () => history.push('/') }>Cancel</Button>\n        <Button onClick={ () => {} }>Create</Button>\n      </div>\n    </div>\n  );\n}","import React from 'react';\nimport {\n  Switch,\n  Route,\n  useHistory\n} from 'react-router-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport './App.scss';\n\nimport { Icon, Button } from 'semantic-ui-react';\nimport { Select } from './Select';\nimport { Add } from './Add';\nimport { Configure } from './Configure';\n\nfunction App() {\n  let history = useHistory();\n  return (\n      <section>\n        <aside></aside>\n        <article>\n          <div className='buttons'>\n            <Button icon labelPosition='left' onClick={() => history.push(\"/add\")}>\n              <Icon name='add circle' />\n              Add EPT\n            </Button>\n            <Button icon labelPosition='left'>\n              <Icon name='sitemap' />\n              Manage\n            </Button>\n            <Button icon labelPosition='left'>\n              <Icon name='upload' />\n              Export\n            </Button>\n          </div>\n          <Switch>\n            <Route path=\"/add\">\n              <Add />\n            </Route>\n            <Route path=\"/configure\">\n              <Configure />\n            </Route>\n            <Route exact path=\"/\">\n              <Select />\n            </Route>\n          </Switch>\n       </article>\n      </section>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  \t<BrowserRouter>\n    \t<App />\n    </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}